# =============================================================================
# 프로덕션용 백엔드 Dockerfile
# =============================================================================
FROM node:18-alpine AS builder

# 빌드 도구 설치
RUN apk add --no-cache python3 make g++

WORKDIR /app

# 공유 패키지 먼저 복사 및 빌드
COPY shared/package*.json ./shared/
RUN cd shared && npm ci

COPY shared/ ./shared/
RUN cd shared && npm run build

# 백엔드 의존성 설치
COPY backend/package*.json ./backend/
RUN cd backend && npm ci --only=production

# 백엔드 소스 복사
COPY backend/ ./backend/

# Prisma 생성
RUN cd backend && npx prisma generate

# TypeScript 빌드
RUN cd backend && npm run build

# =============================================================================
# 프로덕션 이미지
# =============================================================================
FROM node:18-alpine

# =============================================================================
# YouTube 자막 추출을 위한 yt-dlp 설치
# =============================================================================
RUN apk add --no-cache \
    # 시스템 유틸리티
    curl \
    wget \
    # Python 3 (yt-dlp 실행에 필요)
    python3 \
    py3-pip \
    # ffmpeg (비디오 처리에 필요)
    ffmpeg \
    && rm -rf /var/cache/apk/*

# yt-dlp 설치 (pip로 설치하면 자동 업데이트 가능)
RUN pip3 install --no-cache-dir --break-system-packages yt-dlp

# yt-dlp 버전 확인 (빌드 로그에 출력)
RUN yt-dlp --version && echo "✅ yt-dlp installed successfully"

# =============================================================================
# 애플리케이션 설정
# =============================================================================

WORKDIR /app

# 빌드된 파일들 복사
COPY --from=builder /app/shared/dist ./shared/dist
COPY --from=builder /app/shared/package*.json ./shared/
COPY --from=builder /app/backend/dist ./backend/dist
COPY --from=builder /app/backend/node_modules ./backend/node_modules
COPY --from=builder /app/backend/package*.json ./backend/
COPY --from=builder /app/backend/prisma ./backend/prisma

# 작업 디렉토리 변경
WORKDIR /app/backend

# 환경 변수 설정
ENV NODE_ENV=production \
    YT_DLP_PATH=/usr/bin/yt-dlp

# 포트 노출
EXPOSE 3001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:3001/health || exit 1

# 프로덕션 실행
CMD ["npm", "start"]
